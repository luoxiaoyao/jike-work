<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.shop.mapper.GoodsMapper">
    <resultMap id="BaseResultMap" type="com.example.shop.model.entity.Goods">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="image" jdbcType="VARCHAR" property="image"/>
        <result column="price" jdbcType="DECIMAL" property="price"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="count" jdbcType="INTEGER" property="count"/>
        <result column="is_delete" jdbcType="TINYINT" property="isDelete"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="creator_id" jdbcType="BIGINT" property="creatorId"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="modifier_id" jdbcType="BIGINT" property="modifierId"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, name, image, price, status, count, is_delete, create_time, creator_id, update_time, 
    modifier_id
  </sql>
    <select id="selectByExample" parameterType="com.example.shop.model.entity.GoodsExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from goods
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from goods
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from goods
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.example.shop.model.entity.GoodsExample">
        delete from goods
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.example.shop.model.entity.Goods">
    insert into goods (id, name, image, 
      price, status, count, 
      is_delete, create_time, creator_id, 
      update_time, modifier_id)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{image,jdbcType=VARCHAR}, 
      #{price,jdbcType=DECIMAL}, #{status,jdbcType=INTEGER}, #{count,jdbcType=INTEGER}, 
      #{isDelete,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{creatorId,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{modifierId,jdbcType=BIGINT})
  </insert>
    <insert id="insertSelective" parameterType="com.example.shop.model.entity.Goods">
        insert into goods
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="image != null">
                image,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="count != null">
                count,
            </if>
            <if test="isDelete != null">
                is_delete,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="creatorId != null">
                creator_id,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="modifierId != null">
                modifier_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="image != null">
                #{image,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                #{price,jdbcType=DECIMAL},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="count != null">
                #{count,jdbcType=INTEGER},
            </if>
            <if test="isDelete != null">
                #{isDelete,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="creatorId != null">
                #{creatorId,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifierId != null">
                #{modifierId,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.example.shop.model.entity.GoodsExample" resultType="java.lang.Long">
        select count(*) from goods
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update goods
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.image != null">
                image = #{record.image,jdbcType=VARCHAR},
            </if>
            <if test="record.price != null">
                price = #{record.price,jdbcType=DECIMAL},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=INTEGER},
            </if>
            <if test="record.count != null">
                count = #{record.count,jdbcType=INTEGER},
            </if>
            <if test="record.isDelete != null">
                is_delete = #{record.isDelete,jdbcType=TINYINT},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.creatorId != null">
                creator_id = #{record.creatorId,jdbcType=BIGINT},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.modifierId != null">
                modifier_id = #{record.modifierId,jdbcType=BIGINT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update goods
        set id = #{record.id,jdbcType=BIGINT},
        name = #{record.name,jdbcType=VARCHAR},
        image = #{record.image,jdbcType=VARCHAR},
        price = #{record.price,jdbcType=DECIMAL},
        status = #{record.status,jdbcType=INTEGER},
        count = #{record.count,jdbcType=INTEGER},
        is_delete = #{record.isDelete,jdbcType=TINYINT},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        creator_id = #{record.creatorId,jdbcType=BIGINT},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        modifier_id = #{record.modifierId,jdbcType=BIGINT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.shop.model.entity.Goods">
        update goods
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="image != null">
                image = #{image,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DECIMAL},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="count != null">
                count = #{count,jdbcType=INTEGER},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="creatorId != null">
                creator_id = #{creatorId,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifierId != null">
                modifier_id = #{modifierId,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.shop.model.entity.Goods">
    update goods
    set name = #{name,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      status = #{status,jdbcType=INTEGER},
      count = #{count,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      creator_id = #{creatorId,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      modifier_id = #{modifierId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <update id="updateGoodsCount" parameterType="com.example.shop.model.dto.UpdateGoodsCountDTO">
    update goods
    set count = count - #{count,jdbcType=INTEGER},
      update_time = #{time,jdbcType=TIMESTAMP},
      modifier_id = #{userId,jdbcType=BIGINT}
    where id = #{goodsId,jdbcType=BIGINT}
  </update>

    <select id="selectByIds" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from goods
        where true
        <if test="ids != null and ids.size > 0">
            and id in
            <foreach collection="ids" item="id" open="(" separator="," close=")">
                 #{id,jdbcType=BIGINT}
            </foreach>
        </if>

    </select>
</mapper>